/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import model.Salary;
import mainboard.MainBoardFrm;

/**
 *
 * @author judy
 */
public class SalaryEditFrm extends javax.swing.JDialog {

    /**
     * Creates new form SalaryFrm
     */
    private MainBoardFrm main;
    public SalaryEditFrm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Edit the salary");
        main = (MainBoardFrm) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSalaryInformation = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        dateSalary = new com.toedter.calendar.JMonthChooser();
        txtManagerExtra1 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtWorkingQuarter1 = new javax.swing.JTextField();
        txtWorkingQuarter2 = new javax.swing.JTextField();
        txtManagerExtra2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtHealth = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtShiftDay = new javax.swing.JTextField();
        txtShiftNight = new javax.swing.JTextField();
        txtSalary1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        btnCalculate1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtSalary2 = new javax.swing.JTextField();
        btnCalculate2 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtSalary3 = new javax.swing.JTextField();
        btnCalculate3 = new javax.swing.JButton();
        btnCalculate4 = new javax.swing.JButton();
        txtSalary4 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtSalary5 = new javax.swing.JTextField();
        btnCalculate5 = new javax.swing.JButton();
        txtSalary6 = new javax.swing.JTextField();
        btnCalculate6 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnCalculate7 = new javax.swing.JButton();
        txtSalary7 = new javax.swing.JTextField();
        dateYear = new com.toedter.calendar.JYearChooser();

        jLabel9.setText("x 8");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("The amount of day shift:");

        jLabel3.setText("The amount of night shift:");

        jLabel4.setText("Salary of month:");

        jLabel5.setText("Experience:");

        btnSalaryInformation.setText("i");
        btnSalaryInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalaryInformationActionPerformed(evt);
            }
        });

        jLabel6.setText("Month:");

        jLabel34.setText("x 2000 + 39000 +");

        jLabel10.setText("Health support:");

        jLabel12.setText("EDIT SALARY");

        jLabel13.setText("8%");

        jLabel11.setText("Social insurance:");

        jLabel17.setText("x (");

        txtWorkingQuarter1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                txtWorkingQuarter1MouseMoved(evt);
            }
        });
        txtWorkingQuarter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWorkingQuarter1ActionPerformed(evt);
            }
        });

        txtWorkingQuarter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWorkingQuarter2ActionPerformed(evt);
            }
        });

        jLabel1.setText(")");

        jLabel8.setText(")");

        btnAdd.setText("Save");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel19.setText("= shift * [ (working quarter) x (experience extra) + (Minimum salary) + (Manager extra)] * (working hours)");

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel15.setText("x 2000 + 37000 +");

        txtShiftDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShiftDayActionPerformed(evt);
            }
        });

        txtSalary1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalary1ActionPerformed(evt);
            }
        });

        jLabel30.setText("x (");

        btnCalculate1.setText("Calculate");
        btnCalculate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate1ActionPerformed(evt);
            }
        });

        jLabel7.setText("x 8");

        jLabel16.setText("x 8");

        jLabel18.setText("MA1");

        jLabel20.setText("MA2");

        btnCalculate2.setText("Calculate");
        btnCalculate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate2ActionPerformed(evt);
            }
        });

        jLabel21.setText("S1");

        btnCalculate3.setText("Calculate");
        btnCalculate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate3ActionPerformed(evt);
            }
        });

        btnCalculate4.setText("Calculate");
        btnCalculate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate4ActionPerformed(evt);
            }
        });

        jLabel22.setText("S2");

        jLabel23.setText("S3");

        btnCalculate5.setText("Calculate");
        btnCalculate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate5ActionPerformed(evt);
            }
        });

        btnCalculate6.setText("Calculate");
        btnCalculate6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate6ActionPerformed(evt);
            }
        });

        jLabel24.setText("S4");

        jLabel25.setText("S5");

        btnCalculate7.setText("Calculate");
        btnCalculate7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculate7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtShiftDay, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(167, 167, 167)
                                        .addComponent(txtShiftNight, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtWorkingQuarter2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtManagerExtra2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtWorkingQuarter1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtManagerExtra1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))))
                            .addComponent(jLabel19)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dateSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnSalaryInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSalary1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCalculate1))
                                    .addComponent(jLabel13)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSalary2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCalculate2))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnAdd)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton3))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel21)
                                                .addComponent(jLabel22)
                                                .addComponent(jLabel23)
                                                .addComponent(jLabel24)
                                                .addComponent(jLabel25))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtSalary3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnCalculate3))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtSalary4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnCalculate4))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtSalary5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnCalculate5))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtSalary6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnCalculate6))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtSalary7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnCalculate7)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel12)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dateSalary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(btnSalaryInformation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)
                    .addComponent(txtShiftDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManagerExtra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWorkingQuarter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel34)
                    .addComponent(jLabel30)
                    .addComponent(txtShiftNight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWorkingQuarter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManagerExtra2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate2)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate3)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate4)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate5)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate6)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate7)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(jButton3))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalaryInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalaryInformationActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(SwingUtilities.getWindowAncestor(this));
        SalaryInformationFrm salaryInformationFrm = new SalaryInformationFrm(frame, true);
        salaryInformationFrm.setVisible(true);
    }//GEN-LAST:event_btnSalaryInformationActionPerformed

    private void txtWorkingQuarter1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtWorkingQuarter1MouseMoved
    }//GEN-LAST:event_txtWorkingQuarter1MouseMoved

    private void txtWorkingQuarter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWorkingQuarter1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWorkingQuarter1ActionPerformed

    private void txtWorkingQuarter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWorkingQuarter2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWorkingQuarter2ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int month = 1;
        String year;
        boolean isOK = true;
        String managerSalary1, managerSalary2, staffSalary1, staffSalary2, staffSalary3, staffSalary4, staffSalary5;
        month = dateSalary.getMonth() + 1;
        year = String.valueOf(dateYear.getYear());
        if (year.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format for year!");
            isOK = false;
        }
        managerSalary1 = txtSalary1.getText();
        managerSalary2 = txtSalary2.getText();
        staffSalary1 = txtSalary3.getText();
        staffSalary2 = txtSalary4.getText();
        staffSalary3 = txtSalary5.getText();
        staffSalary4 = txtSalary6.getText();
        staffSalary5 = txtSalary7.getText();
        
        if (txtSalary1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press first 'Calculate' button to calculate salary for the first manager (MA1)!");
            isOK = false;
        }
        if (txtSalary2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press second 'Calculate' button to calculate salary for the second manager (MA2)!");
            isOK = false;
        }
        if (txtSalary3.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press third 'Calculate' button to calculate salary for the first staff (S1)!");
            isOK = false;
        }
        if (txtSalary4.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press fourth 'Calculate' button to calculate salary for the second staff (S2)!");
            isOK = false;
        }
        if (txtSalary5.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press fifth 'Calculate' button to calculate salary for the third staff (S3)!");
            isOK = false;
        }
        if (txtSalary6.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press sixth 'Calculate' button to calculate salary for the fourth staff (S4)!");
            isOK = false;
        }
        if (txtSalary7.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Press seventh 'Calculate' button to calculate salary for the fifth staff (S5)!");
            isOK = false;
        }
        if (isOK) {
            Salary salary = new Salary(year,month,managerSalary1, managerSalary2, staffSalary1, staffSalary2, staffSalary3, staffSalary4, staffSalary5);
            main.updateSalary(salary);
            JOptionPane.showMessageDialog(rootPane, "Successfully edited!");
            this.dispose();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtShiftDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShiftDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShiftDayActionPerformed

    String salary1, salary2, salary3, salary4, salary5, salary6, salary7;
    private void btnCalculate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate1ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary1 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary1.setText(salary1);
        }
    }//GEN-LAST:event_btnCalculate1ActionPerformed

    private void btnCalculate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate2ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary2 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary2.setText(salary2);
        }
    }//GEN-LAST:event_btnCalculate2ActionPerformed

    private void btnCalculate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate3ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary3 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary3.setText(salary3);
        }
    }//GEN-LAST:event_btnCalculate3ActionPerformed

    private void btnCalculate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate4ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary4 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary4.setText(salary4);
        }
    }//GEN-LAST:event_btnCalculate4ActionPerformed

    private void btnCalculate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate5ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary5 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary5.setText(salary5);
        }
    }//GEN-LAST:event_btnCalculate5ActionPerformed

    private void btnCalculate6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate6ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary6 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary6.setText(salary6);
        }
    }//GEN-LAST:event_btnCalculate6ActionPerformed

    private void btnCalculate7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculate7ActionPerformed
        boolean isOK = true;
        int shiftDay = 0, shiftNight = 0, exe1 = 0, exe2 = 0;
        float health = 0, managerExtra1 = 0, managerExtra2 = 0;

        // Enter the shifts
        try {
            shiftDay = Integer.parseInt(txtShiftDay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the day shift!");
            isOK = false;
        }
        try {
            shiftNight = Integer.parseInt(txtShiftNight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the night shift!");
            isOK = false;
        }
        if ((shiftDay+shiftNight) > 31) {
            JOptionPane.showMessageDialog(rootPane, "No one can work more than 31 days of a month! Re-enter these field!");
            isOK = false;
        }
        
        // Enter the working quarter
        try {
            exe1 = Integer.parseInt(txtWorkingQuarter1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        try {
            exe2 = Integer.parseInt(txtWorkingQuarter2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! Please re-enter with a number in the working quarter!");
            isOK = false;
        }
        if (exe1 != exe2) {
            JOptionPane.showMessageDialog(rootPane, "Two quarter fields must share the same number!");
            isOK = false;
        }
        
        
        // Enter the manager extra
        try {
            managerExtra1 = Float.parseFloat(txtManagerExtra1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra1-5000) % 2000 != 0 && managerExtra1 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        try {
            managerExtra2 = Float.parseFloat(txtManagerExtra2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong format!
                Please check the button(i) next to the line 'Experience' for more information.""");
                isOK = false;
            }
        if ((managerExtra2-5000) % 2000 != 0 && managerExtra2 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong manager extra ! The manager extra should be 5,000 + the extra in a multiple of 2,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (managerExtra1 != managerExtra2) {
            JOptionPane.showMessageDialog(rootPane, "Two manager fields must share the same number!");
            isOK = false;
        }

        // Enter the health support
        try {
            health = Float.parseFloat(txtHealth.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Wrong format! "
                + "\nPlease check the button(i) next to the line 'Experience' for more information.");
            isOK = false;
        }
        if ((health-60000)%50 != 0) {
            JOptionPane.showMessageDialog(rootPane, """
                Wrong health support! The health support should be 600,000 + the extra in a multiple of 50,000.
                Please check the button (i) next to the line 'Experience' for more information.""");
            isOK = false;
        }
        if (isOK) {
            salary7 = String.format("%.06f", ((shiftDay*(exe1*2000+37000+managerExtra1)*8+shiftNight*(exe2*2000+37000+managerExtra2)*8)+health)*0.92);
            txtSalary7.setText(salary7);
        }
    }//GEN-LAST:event_btnCalculate7ActionPerformed

    private void txtSalary1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalary1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalary1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalaryEditFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalaryEditFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalaryEditFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalaryEditFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SalaryEditFrm dialog = new SalaryEditFrm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCalculate1;
    private javax.swing.JButton btnCalculate2;
    private javax.swing.JButton btnCalculate3;
    private javax.swing.JButton btnCalculate4;
    private javax.swing.JButton btnCalculate5;
    private javax.swing.JButton btnCalculate6;
    private javax.swing.JButton btnCalculate7;
    private javax.swing.JButton btnSalaryInformation;
    private com.toedter.calendar.JMonthChooser dateSalary;
    private com.toedter.calendar.JYearChooser dateYear;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtHealth;
    private javax.swing.JTextField txtManagerExtra1;
    private javax.swing.JTextField txtManagerExtra2;
    private javax.swing.JTextField txtSalary1;
    private javax.swing.JTextField txtSalary2;
    private javax.swing.JTextField txtSalary3;
    private javax.swing.JTextField txtSalary4;
    private javax.swing.JTextField txtSalary5;
    private javax.swing.JTextField txtSalary6;
    private javax.swing.JTextField txtSalary7;
    private javax.swing.JTextField txtShiftDay;
    private javax.swing.JTextField txtShiftNight;
    private javax.swing.JTextField txtWorkingQuarter1;
    private javax.swing.JTextField txtWorkingQuarter2;
    // End of variables declaration//GEN-END:variables

    public void setEditData(Salary s3) {
        dateYear.setYear(Integer.valueOf(s3.getYear()));
        dateSalary.setMonth(s3.getMonth()+1);
        txtSalary1.setText(s3.getManagerSalary1());
        txtSalary2.setText(s3.getManagerSalary2());
        txtSalary3.setText(s3.getStaffSalary1());
        txtSalary4.setText(s3.getStaffSalary2());
        txtSalary5.setText(s3.getStaffSalary3());
        txtSalary6.setText(s3.getStaffSalary4());
        txtSalary7.setText(s3.getStaffSalary5());
    }
}
